generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())

  name      String   @db.VarChar(64)
  email     String   @unique @db.VarChar(100)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  roleId    Int      @default(1)

  role     Role       @relation(fields: [roleId], references: [id])
  Category Category[]
  Exercise Exercise[]
  Comment  Comment[]

  @@map("users")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  User User[]

  @@map("roles")
}

model Category {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  image_url   String?

  userId    String
  user      User       @relation(fields: [userId], references: [uuid], onDelete: Cascade)
  exercises Exercise[]

  @@map("categories")
}

model Exercise {
  id          Int        @id @default(autoincrement())
  title       String
  difficulty  Difficulty
  description String
  duration    Int

  sets      Int?
  reps      Int?
  video_url String?

  userId     String
  user       User     @relation(fields: [userId], references: [uuid], onDelete: Cascade)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  comments Comment[]

  @@map("exercises")
}

model Comment {
  id   Int    @id @default(autoincrement())
  text String

  userId     String
  user       User     @relation(fields: [userId], references: [uuid], onDelete: Cascade)
  exerciseId Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)

  @@map("comments")
}

enum Difficulty {
  LIGHT
  MODERATE
  HARD
  EXTREME
}
